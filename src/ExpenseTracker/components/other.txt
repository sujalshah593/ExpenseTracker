import React from "react";

export default function BalanceSummary({transactions}){

    const income = transactions
        .filter((t) => t.type === "income")
        .reduce((acc,curr) => acc + curr.amount, 0);
    
    const expenses = transactions
        .filter((t) => t.type === "expense")
        .reduce((acc, curr) => acc + curr.amount, 0);

    const net = income - expenses    

    return(
        <div className="bg-blue-50 p-4 rounded-md mb-6 grid grid-cols-1 md:grid-cols-3 gap-4 ">
            <div className="text-center p-4 bg-white shadow rounded">
                <h3 className="text-gray-500">Total Income</h3>
                <p className="text-green-600 font-bold text-xl">${income.toFixed(2)}</p>
            </div>
            <div className="text-center p-4 bg-white shadow rounded">
                <h3 className="text-gray-500">Total Expenses</h3>
                <p className="text-green-600 font-bold text-xl">${expenses.toFixed(2)}</p>
            </div>
            <div className="text-center p-4 bg-white shadow rounded">
                <h3 className="text-gray-500">Net Balance</h3>
                <p className={`font-bold text-xl ${net>=0?"text-green-600":"text-red-600"}`}>${net.toFixed(2)}</p>
            </div>
        </div>
    );

}

import React, { useEffect, useState } from "react";

export default function TransactionForm({addTransaction}){

    const [form, setForm] = useState({
        date: "",
        description:"",
        category:"",
        amount:"",
        type:"income",
    });

    const [error, setError] = useState("");

    useEffect(() => {
        const today = new Date();
        const yyyy = today.getFullYear();
        const mm = String(today.getMonth()+1).padStart(2,"0");
        const dd = String(today.getDate()).padStart(2,"0");
        setForm((f) => ({...f, date: `${yyyy}-${mm}-${dd}`}));
    },[])

    const handleChange = (e) => {
        const {name, value} = e.target;
        setForm((prev) => ({...prev, [name]: value}));
    }

    const handleSubmit = (e) => {
        e.preventDefault();
        const {date, description, category, amount, type} = form;

       if (!description) {
  setError("Description is required.");
} else if (!category) {
  setError("Please select a category.");
} else if (isNaN(amount) || amount <= 0) {
  setError("Enter a valid positive amount.");
}


        addTransaction({
            id: Date.now(),
            date,
            description,
            category,
            amount: parseFloat(amount),
            type,
        });

        setForm((f) => ({
            ...f,
            description:"",
            category:"",
            amount:"",
            type: "income",
        }));
    }


    return(
        <div className="mb-6">
            <h2 className="text-xl font-semibold mb-4 text-blue-600">Add New Transaction</h2>
            <form onSubmit={handleSubmit} className="grid gap-4">
                <input type="date" name="date" value={form.date} onChange={handleChange} className="border p-2 rounded" />
                <input type="text" name="description" placeholder="Description..." value={form.description} onChange={handleChange} className="border p-2 rounded"/>
                <select name="category" value={form.category} onChange={handleChange} className="border">
                    <option >Select Category</option>
                    <option value="Food">Food</option>
                    <option value="Transportation">Transportation</option>
                    <option value="Entertainment">Entertainment</option>
                    <option value="Utilites">Utilites</option>
                    <option value="Rent">Rent</option>
                    <option value="Salary">Salary</option>
                    <option value="Freelance">Freelance</option>
                    <option value="Other">Other</option>
                </select>
                <input type="number" name="amount" placeholder="Amount" value={form.amount} onChange={handleChange} className="border p-2 rounded"/>    
                <div className="flex gap-4 items-center">
                    <label className="flex items-center">
                        <input type="radio" name="type" value="expense" checked={form.type === "expense"} onChange={handleChange} className="mr-2" />
                        Expense
                    </label>
                    <label className="flex items-center">
                        <input type="radio" name="type" value="income" checked={form.type === "income"} onChange={handleChange} className="mr-2" />
                        Income
                    </label>
                </div>
                <button type="submit" className="bg-green-600 text-white py-2 rounded hover:bg-green-700">
                    Add Transaction
                </button>
                {error && <p className="text-red-500 text-sm">{error}</p>}
            </form>
        </div>
    );

}

import React from "react";

export default function TransactionTable({transactions, deleteTransaction}){

    return(
        <div>
            <h2 className="text-xl font-semibold mb-4 text-blue-600">Transaction History</h2>
            {transactions.length === 0 ? (
                <p className="text-red-500 italic text-center">No Transaction yet. Add Transactions</p>
            ):(
                <div className="overflow-x-auto">
                    <table className="min-w-full border border-gray-300 text-sm">
                        <thead className="bg-gray-100">
                            <tr>
                                <th className="p-2 border">Date</th>
                                <th className="p-2 border">Description</th>
                                <th className="p-2 border">Category</th>
                                <th className="p-2 border">Amount</th>
                                <th className="p-2 border">Type</th>
                                <th className="p-2 border">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {transactions.map((t) => (
                                <tr key={t.id} className={t.type === "income" ? "text-green-600":"text-red-500"}>
                                    <td className="p-2 border">{t.date}</td>
                                    <td className="p-2 border">{t.description}</td>
                                    <td className="p-2 border">{t.category}</td>
                                    <td className="p-2 border">{t.amount.toFixed(2)}</td>
                                    <td className="p-2 border">{t.type}</td>
                                    <td className="p-2 border">
                                        <button onClick={() => deleteTransaction(t.id)}
                                            className="bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600 text-xs">
                                            Delete
                                        </button>
                                    </td>
                                </tr>
                            ))}
                        </tbody>
                    </table>
                </div>
            )}
        </div>
    );

}

import React, { useEffect, useState } from "react";
import BalanceSummary from "./BalanceSummary";
import TransactionForm from "./TransactionForm";
import TransactionTable from "./TransactionTable";

export default function Home() {
    const [transactions, setTransactions] = useState([]);

    useEffect(() => {
        const stored = localStorage.getItem("transactions");
        if(stored) setTransactions(JSON.parse(stored));
    },[]);

    const addTransaction = (transaction) => {
        setTransactions((prev) => [...prev, transaction]);
    };

    const deleteTransaction = (id) => {
        setTransactions((prev) => prev.filter((t) => t.id !== id));
    };

    return(
        <div className="min-h-screen bg-gray-100 flex justify-center p-6">
            <div className="w-full max-w-4xl bg-white rounded-xl shadow-md p-6">
                <h1 className="text-3xl font-bold text-blue-600 text-center mb-6">Expense Tracker</h1>
                <BalanceSummary transactions={transactions}/>
                <TransactionForm addTransaction={addTransaction} />
                <TransactionTable transactions={transactions} deleteTransaction={deleteTransaction}/>
            </div>
        </div>
    );
}